{"version":3,"sources":["Components/monster_template.js","App.js","index.js"],"names":["monster","className","src","this","props","data","id","name","email","Component","App","updatesearch","e","setState","search","target","value","state","fetch","then","res","json","fact","class","type","placeholder","onChange","filter","toLowerCase","includes","map","data2","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAgBeA,E,4JAXX,WACI,OACI,sBAAKC,UAAU,OAAf,UACI,qBAAKC,IAAG,+BAA0BC,KAAKC,MAAMC,KAAKC,MAClD,6BAAKH,KAAKC,MAAMC,KAAKE,OACrB,4BAAIJ,KAAKC,MAAMC,KAAKG,e,GANdC,aC6CPC,E,kDA1Cb,aAAc,IAAD,8BAEX,gBAmBFC,aAAe,SAACC,GACd,EAAKC,SAAS,CAACC,OAAOF,EAAEG,OAAOC,SAnB/B,EAAKC,MAAM,CACPjB,QAAQ,GACRc,OAAO,IALA,E,qDASX,WAAoB,IAAD,OACfI,MAAM,8CACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,EAAKT,SACL,CACAb,QAAQsB,S,oBAUhB,WAAS,IAAD,OACN,OACE,sBAAKC,MAAM,QAAX,UACA,+CACA,uBAAOC,KAAK,SAASC,YAAY,SAASC,SAAUvB,KAAKQ,eACrD,qBAAKV,UAAU,OAAf,SACDE,KAAKc,MAAMjB,QAAQ2B,QAAO,SAACtB,GAC1B,OAAOA,EAAKE,KAAKqB,cAAcC,SAAS,EAAKZ,MAAMH,OAAOc,kBACzDE,KAAK,SAAAC,GACN,OAAO,cAAC,EAAD,CAAS1B,KAAM0B,gB,GAnCdtB,aCDlBuB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bc12b04a.chunk.js","sourcesContent":["import React,{Component} from 'react';\nimport \"../Styles/monster_template.css\"\n\n\nclass monster extends Component{\n    render(){\n        return (\n            <div className=\"card\" >\n                <img src={`https://robohash.org/${this.props.data.id}`} />\n                <h2>{this.props.data.name}</h2>\n                <p>{this.props.data.email}</p>\n            </div>\n            )\n    }\n}\n\nexport default monster;","\nimport './App.css';\nimport {Component} from 'react';\nimport Monster from './Components/monster_template';\n\n\nclass App extends Component{\n  constructor(){\n\n    super();\n    this.state={\n        monster:[],\n        search:''\n    };\n}\n\n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(res => res.json())\n        .then(fact => {\n          this.setState(\n          {\n          monster:fact\n        }\n        )\n    })\n  }\n\n  updatesearch = (e)=>{\n    this.setState({search:e.target.value})\n  }\n\n  render(){\n    return(\n      <div class=\"align\">\n      <h1>Monter Hunter</h1>\n      <input type='search' placeholder='Search' onChange={this.updatesearch}/>\n          <div className='grid'>\n        {this.state.monster.filter((data)=>{\n          return data.name.toLowerCase().includes(this.state.search.toLowerCase())\n        }).map( data2 => {\n          return <Monster data={data2}/>\n        })}\n          </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}